{"version":3,"names":["NativeReanimated","isJest","JSReanimated","constructor","undefined","getTimestamp","Date","now","window","performance","makeShareableClone","value","__hostObjectShareableJSRef","installCoreFunctions","valueUnpacker","_valueUnpacker","scheduleOnUI","worklet","requestAnimationFrame","registerEventHandler","_eventHash","_eventHandler","unregisterEventHandler","_","enableLayoutAnimations","console","warn","registerSensor","unregisterSensor","subscribeForKeyboardEvents","unsubscribeFromKeyboardEvents"],"sources":["JSReanimated.ts"],"sourcesContent":["import { NativeReanimated } from '../NativeReanimated/NativeReanimated';\nimport { ShareableRef } from '../commonTypes';\nimport { isJest } from '../PlatformChecker';\n\nexport default class JSReanimated extends NativeReanimated {\n  _valueUnpacker?: <T>(value: T) => void = undefined;\n\n  constructor() {\n    super(false);\n    if (isJest()) {\n      // on node < 16 jest have problems mocking performance.now method which\n      // results in the tests failing, since date precision isn't that important\n      // for tests, we use Date.now instead\n      this.getTimestamp = () => Date.now();\n    } else {\n      this.getTimestamp = () => window.performance.now();\n    }\n  }\n\n  makeShareableClone<T>(value: T): ShareableRef<T> {\n    return { __hostObjectShareableJSRef: value };\n  }\n\n  installCoreFunctions(valueUnpacker: <T>(value: T) => T): void {\n    this._valueUnpacker = valueUnpacker;\n  }\n\n  scheduleOnUI<T>(worklet: ShareableRef<T>) {\n    // @ts-ignore web implementation has still not been updated after the rewrite, this will be addressed once the web implementation updates are ready\n    requestAnimationFrame(worklet);\n  }\n\n  registerEventHandler<T>(\n    _eventHash: string,\n    _eventHandler: ShareableRef<T>\n  ): string {\n    // noop\n    return '';\n  }\n\n  unregisterEventHandler(_: string): void {\n    // noop\n  }\n\n  enableLayoutAnimations() {\n    console.warn(\n      '[Reanimated] enableLayoutAnimations is not available for WEB yet'\n    );\n  }\n\n  registerSensor(): number {\n    console.warn('[Reanimated] useAnimatedSensor is not available on web yet.');\n    return -1;\n  }\n\n  unregisterSensor(): void {\n    // noop\n  }\n\n  subscribeForKeyboardEvents(_: ShareableRef<number>): number {\n    console.warn(\n      '[Reanimated] useAnimatedKeyboard is not available on web yet.'\n    );\n    return -1;\n  }\n\n  unsubscribeFromKeyboardEvents(_: number): void {\n    // noop\n  }\n}\n"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,sCAAjC;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,eAAe,MAAMC,YAAN,SAA2BF,gBAA3B,CAA4C;EAGzDG,WAAW,GAAG;IACZ,MAAM,KAAN;;IADY,wCAF2BC,SAE3B;;IAEZ,IAAIH,MAAM,EAAV,EAAc;MACZ;MACA;MACA;MACA,KAAKI,YAAL,GAAoB,MAAMC,IAAI,CAACC,GAAL,EAA1B;IACD,CALD,MAKO;MACL,KAAKF,YAAL,GAAoB,MAAMG,MAAM,CAACC,WAAP,CAAmBF,GAAnB,EAA1B;IACD;EACF;;EAEDG,kBAAkB,CAAIC,KAAJ,EAA+B;IAC/C,OAAO;MAAEC,0BAA0B,EAAED;IAA9B,CAAP;EACD;;EAEDE,oBAAoB,CAACC,aAAD,EAA0C;IAC5D,KAAKC,cAAL,GAAsBD,aAAtB;EACD;;EAEDE,YAAY,CAAIC,OAAJ,EAA8B;IACxC;IACAC,qBAAqB,CAACD,OAAD,CAArB;EACD;;EAEDE,oBAAoB,CAClBC,UADkB,EAElBC,aAFkB,EAGV;IACR;IACA,OAAO,EAAP;EACD;;EAEDC,sBAAsB,CAACC,CAAD,EAAkB,CACtC;EACD;;EAEDC,sBAAsB,GAAG;IACvBC,OAAO,CAACC,IAAR,CACE,kEADF;EAGD;;EAEDC,cAAc,GAAW;IACvBF,OAAO,CAACC,IAAR,CAAa,6DAAb;IACA,OAAO,CAAC,CAAR;EACD;;EAEDE,gBAAgB,GAAS,CACvB;EACD;;EAEDC,0BAA0B,CAACN,CAAD,EAAkC;IAC1DE,OAAO,CAACC,IAAR,CACE,+DADF;IAGA,OAAO,CAAC,CAAR;EACD;;EAEDI,6BAA6B,CAACP,CAAD,EAAkB,CAC7C;EACD;;AAhEwD"}