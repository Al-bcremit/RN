"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTimestamp = getTimestamp;
Object.defineProperty(exports, "stopMapper", {
  enumerable: true,
  get: function () {
    return _mappers.stopMapper;
  }
});

var _NativeReanimated = _interopRequireDefault(require("./NativeReanimated"));

var _reactNative = require("react-native");

var _PlatformChecker = require("./PlatformChecker");

var _mappers = require("./mappers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

let _getTimestamp;

if ((0, _PlatformChecker.nativeShouldBeMock)()) {
  _getTimestamp = () => {
    return _NativeReanimated.default.getTimestamp();
  };
} else {
  _getTimestamp = () => {
    'worklet';

    if (_frameTimestamp) {
      return _frameTimestamp;
    }

    if (_eventTimestamp) {
      return _eventTimestamp;
    }

    return _getCurrentTime();
  };
}

function getTimestamp() {
  'worklet';

  if (_reactNative.Platform.OS === 'web') {
    return _NativeReanimated.default.getTimestamp();
  }

  return _getTimestamp();
}
//# sourceMappingURL=time.js.map