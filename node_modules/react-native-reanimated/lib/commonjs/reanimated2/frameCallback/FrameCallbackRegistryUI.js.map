{"version":3,"names":["prepareUIRegistry","runOnUI","frameCallbackRegistry","Map","frameCallbackActive","Set","isFrameCallbackRunning","runCallbacks","loop","forEach","key","callback","get","size","requestAnimationFrame","registerFrameCallback","callbackId","set","unregisterFrameCallback","frameCallbackId","manageStateFrameCallback","delete","state","add","global","_frameCallbackRegistry"],"sources":["FrameCallbackRegistryUI.ts"],"sourcesContent":["import { runOnUI } from '../core';\n\nexport default interface FrameCallbackRegistryUI {\n  frameCallbackRegistry: Map<number, () => void>;\n  frameCallbackActive: Set<number>;\n  isFrameCallbackRunning: boolean;\n  runCallbacks: () => void;\n  registerFrameCallback: (callback: () => void, callbackId: number) => void;\n  unregisterFrameCallback: (frameCallbackId: number) => void;\n  manageStateFrameCallback: (frameCallbackId: number, state: boolean) => void;\n}\n\nexport const prepareUIRegistry = runOnUI(() => {\n  'worklet';\n\n  const frameCallbackRegistry: FrameCallbackRegistryUI = {\n    frameCallbackRegistry: new Map<number, () => void>(),\n    frameCallbackActive: new Set<number>(),\n    isFrameCallbackRunning: false,\n\n    runCallbacks() {\n      const loop = () => {\n        this.frameCallbackActive.forEach((key: number) => {\n          const callback = this.frameCallbackRegistry.get(key);\n          callback!();\n        });\n\n        if (this.frameCallbackActive.size > 0) {\n          requestAnimationFrame(loop);\n        } else {\n          this.isFrameCallbackRunning = false;\n        }\n      };\n\n      if (!this.isFrameCallbackRunning) {\n        requestAnimationFrame(loop);\n        this.isFrameCallbackRunning = true;\n      }\n    },\n\n    registerFrameCallback(callback: () => void, callbackId: number) {\n      this.frameCallbackRegistry.set(callbackId, callback);\n    },\n\n    unregisterFrameCallback(frameCallbackId: number) {\n      this.manageStateFrameCallback(frameCallbackId, false);\n      this.frameCallbackRegistry.delete(frameCallbackId);\n    },\n\n    manageStateFrameCallback(frameCallbackId: number, state: boolean) {\n      if (frameCallbackId === -1) {\n        return;\n      }\n      if (state) {\n        this.frameCallbackActive.add(frameCallbackId);\n        this.runCallbacks();\n      } else {\n        this.frameCallbackActive.delete(frameCallbackId);\n      }\n    },\n  };\n\n  global._frameCallbackRegistry = frameCallbackRegistry;\n});\n"],"mappings":";;;;;;;AAAA;;AAYO,MAAMA,iBAAiB,GAAG,IAAAC,aAAA,EAAQ,MAAM;EAC7C;;EAEA,MAAMC,qBAA8C,GAAG;IACrDA,qBAAqB,EAAE,IAAIC,GAAJ,EAD8B;IAErDC,mBAAmB,EAAE,IAAIC,GAAJ,EAFgC;IAGrDC,sBAAsB,EAAE,KAH6B;;IAKrDC,YAAY,GAAG;MACb,MAAMC,IAAI,GAAG,MAAM;QACjB,KAAKJ,mBAAL,CAAyBK,OAAzB,CAAkCC,GAAD,IAAiB;UAChD,MAAMC,QAAQ,GAAG,KAAKT,qBAAL,CAA2BU,GAA3B,CAA+BF,GAA/B,CAAjB;UACAC,QAAQ;QACT,CAHD;;QAKA,IAAI,KAAKP,mBAAL,CAAyBS,IAAzB,GAAgC,CAApC,EAAuC;UACrCC,qBAAqB,CAACN,IAAD,CAArB;QACD,CAFD,MAEO;UACL,KAAKF,sBAAL,GAA8B,KAA9B;QACD;MACF,CAXD;;MAaA,IAAI,CAAC,KAAKA,sBAAV,EAAkC;QAChCQ,qBAAqB,CAACN,IAAD,CAArB;QACA,KAAKF,sBAAL,GAA8B,IAA9B;MACD;IACF,CAvBoD;;IAyBrDS,qBAAqB,CAACJ,QAAD,EAAuBK,UAAvB,EAA2C;MAC9D,KAAKd,qBAAL,CAA2Be,GAA3B,CAA+BD,UAA/B,EAA2CL,QAA3C;IACD,CA3BoD;;IA6BrDO,uBAAuB,CAACC,eAAD,EAA0B;MAC/C,KAAKC,wBAAL,CAA8BD,eAA9B,EAA+C,KAA/C;MACA,KAAKjB,qBAAL,CAA2BmB,MAA3B,CAAkCF,eAAlC;IACD,CAhCoD;;IAkCrDC,wBAAwB,CAACD,eAAD,EAA0BG,KAA1B,EAA0C;MAChE,IAAIH,eAAe,KAAK,CAAC,CAAzB,EAA4B;QAC1B;MACD;;MACD,IAAIG,KAAJ,EAAW;QACT,KAAKlB,mBAAL,CAAyBmB,GAAzB,CAA6BJ,eAA7B;QACA,KAAKZ,YAAL;MACD,CAHD,MAGO;QACL,KAAKH,mBAAL,CAAyBiB,MAAzB,CAAgCF,eAAhC;MACD;IACF;;EA5CoD,CAAvD;EA+CAK,MAAM,CAACC,sBAAP,GAAgCvB,qBAAhC;AACD,CAnDgC,CAA1B"}